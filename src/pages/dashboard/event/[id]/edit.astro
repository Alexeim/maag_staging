---
import DashboardLayout from "@/Layouts/DashboardLayout.astro";
import EventComposer from "@/components/dashboard/EventComposer.astro";
import cultureTags from "@/content/tags/CultureTags.json";
import parisTags from "@/content/tags/ParisTags.json";
import { eventsApi } from "@/lib/api/api";

const { id } = Astro.params;

let eventData = null;
try {
  eventData = await eventsApi.getById(id);
} catch (error) {
  console.error("Failed to fetch event", error);
}

const eventCreatorState = JSON.stringify({
  categoryTags: {
    culture: cultureTags.cultureTags,
    paris: parisTags.parisTags,
  },
  initialEvent: eventData,
  eventId: id,
  isEditMode: true,
  onSaveRedirect: "/dashboard/events",
}).replace(/</g, "\\u003c");
---

<DashboardLayout title="Редактировать событие" active="events">
  {eventData ? (
    <EventComposer
      heading="Редактировать событие"
      submitLabel="Обновить событие"
      eventCreatorState={eventCreatorState}
      cancelHref="/dashboard/events"
      deleteEventId={id}
      deleteRedirect="/dashboard/events"
    />
  ) : (
    <div class="bg-base-100 border border-base-300 rounded-xl p-6">
      <h2 class="text-xl font-semibold mb-2">Событие не найдено</h2>
      <p class="text-base-content/70">
        Возможно, событие было удалено или указан неверный идентификатор.
      </p>
      <a
        href="/dashboard/events"
        class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
      >
        Вернуться к списку событий
      </a>
    </div>
  )}
</DashboardLayout>
